{"version":3,"sources":["component/UIElements/student.js","component/UIElements/app.js","component/Login/login.js","component/UIElements/ingang.js","component/Main/main.js","component/Static/footer.js","component/Setting/prohibition.js","component/Setting/settingIngang.js","component/Setting/update.js","App.js","serviceWorker.js","index.js"],"names":["Header","Content","Sider","SubMenu","RangePicker","FormItem","es_form","Item","EditableContext","React","createContext","EditableFormRow","create","_ref","form","props","index","Object","objectWithoutProperties","react_default","a","createElement","Provider","value","EditableCell","getInput","_this","inputType","input_number","input","_this2","this","_this$props","editing","dataIndex","title","record","restProps","Consumer","getFieldDecorator","style","margin","rules","required","message","concat","initialValue","children","Component","student","_this3","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isEditing","key","state","editingKey","cancel","setState","saveaction","console","log","onCollapse","collapsed","onChange","dateString","onOk","Date","getTime","users","startTime","endTime","_this4","firstDate","moment","_d","finishDate","format","userTimesSet","sortingNumbers","sortingNumbersNon","i","length","map","userTimes","isSameOrAfter","isSameOrBefore","push","_this4$state","sortingDates","filter","startHours","diff","duration","days","parseInt","asDays","hours","asHours","minutes","asMinutes","alert","getColumnSearchProps","filterDropdown","_ref2","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","placeholder","e","target","onPressEnter","handleSearch","width","marginBottom","display","es_button","type","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","main_default","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","logout","confirmLogout","axios","get","then","res","data","Cookies","remove","success","history","cancelLogout","error","onChangePicker","pagination","filters","sorter","compStringReverse","b","delete","preventDefault","_this3$state","selectedRowKeys","rowArrayDelete","j","catch","err","usersTimes","bind","assertThisInitialized","columns","objectSpread","editable","id_st","defaultSortOrder","id_tc","name_app","id_app","sortDirections","popconfirm","onConfirm","save","okText","cancelText","href","float","stlye","edit","_this5","validateFields","row","newData","toConsumableArray","findIndex","item","splice","updateobj","put","_this6","idx","startDate","resultStartDate","starttime","endDate","resultEndDate","endtime","_this7","components","body","cell","col","onCell","rowSelection","selectedRows","hasSelected","layout","minHeight","collapsible","className","menu","theme","defaultSelectedKeys","mode","maxHeight","marginTop","Link","to","position","bottom","onCancel","background","breadcrumb","marginLeft","fontWeight","fontSize","showTime","clear","table","bordered","dataSource","rowClassName","rowkey","uid","disabled","app_EditableContext","app_FormItem","app","startEndTime","dates","_this3$state2","_isMounted","app_Sider","app_SubMenu","app_Header","app_Content","app_RangePicker","login","handleSubmit","values","window","location","reload","id_ad","post","withCredentials","result","loading","enterLoading","formFieldInput","id","password","height","textAlign","top","onSubmit","prefix","htmlType","WrappedNormalLoginForm","name","ingang_EditableContext","ingang_FormItem","ingang","ingang_Sider","ingang_SubMenu","ingang_Header","ingang_Content","ingang_RangePicker","labels","datasets","hoverBackgroundColor","dataSecond","main","main_Sider","main_SubMenu","main_Header","main_Content","react","flex","es","options","legend","fontColor","fonrWeight","fontFamily","responsive","maintainAspectRatio","Footer","footer","twoToneColor","formItemLayout","labelCol","span","wrapperCol","prohibition_EditableContext","prohibition_FormItem","prohibition","selectedRowKeysFalse","appFalse","selectedRowDelete","rightButton","appTrue","rowArrayRight","selectedRowTrueRight","rowArrayRightFailed","selectedRowFalseRight","appFalseList","leftButton","_this3$state3","selectedRowTrueLeft","selectedRowFalseLeft","hasOwnProperty","insertObj","columnsFalse","savefalse","_this$props$form","getFieldError","isFieldTouched","appNameError","appIdError","hasSelectedFalse","rowSelectionFalse","prohibition_Sider","prohibition_SubMenu","prohibition_Header","prohibition_Content","assign","validateStatus","help","Setting_prohibition","settingIngang_EditableContext","settingIngang_FormItem","settingIngang","settingIngang_Sider","settingIngang_SubMenu","settingIngang_Header","settingIngang_Content","Setting_settingIngang","update_EditableContext","update_FormItem","update","version","url","activateSubmit","update_Sider","update_SubMenu","update_Header","update_Content","columnTitle","columnWidth","spaceBetween","Setting_update","App","cookie","document","pathname","BrowserRouter","Route","exact","path","component","Static_footer","Boolean","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.761e1b72.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, DatePicker, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n// -----------------------Layout\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\nconst {RangePicker} = DatePicker;\r\n// -----------------------Layout\r\n\r\n// ----- Editer Func\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `Please Input ${title}!`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass student extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        users : [],\r\n        collapsed: false,\r\n        searchText: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        selectedRowKeys : [],\r\n        usersTimes : [],\r\n        sortingNumbersNon : [],\r\n        sortingNumbers : [],\r\n      }\r\n      \r\n      this.onOk = this.onOk.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n      this.delete = this.delete.bind(this);\r\n      this.confirmLogout = this.confirmLogout.bind(this);\r\n      this.cancelLogout = this.cancelLogout.bind(this);\r\n\r\n      this.columns = [\r\n          {\r\n            title: '학생명',\r\n            dataIndex: 'id_st',\r\n            key: 'id_st',\r\n            width: '18%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('id_st'),\r\n            sorter: (a,b) => this.compStringReverse(a.id_st, b.id_st),\r\n            defaultSortOrder: 'descend',\r\n          }, \r\n          {\r\n            title: '담당 강사',\r\n            dataIndex: 'id_tc',\r\n            key: 'id_tc',\r\n            width: '18%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('id_tc'),\r\n            sorter: (a,b) => this.compStringReverse(a.id_tc, b.id_tc),\r\n          },\r\n          {\r\n            title: '앱 이름',\r\n            dataIndex: 'name_app',\r\n            width: '18%',\r\n            editable: true,\r\n            key: 'name_app',\r\n            ...this.getColumnSearchProps('name_app'),\r\n            sorter: (a, b) => this.compStringReverse(a.name_app, b.name_app),\r\n          }, \r\n            \r\n          {\r\n              title: '앱 ID',\r\n              dataIndex: 'id_app',\r\n              width: '18%',\r\n              editable: true,\r\n              key: 'id_app',\r\n              ...this.getColumnSearchProps('id_app'),\r\n              sorter: (a, b) => this.compStringReverse(a.id_app, b.id_app),\r\n          },   \r\n          {\r\n            title: '총사용량',\r\n            dataIndex: 'startTime',\r\n            width: '18%',\r\n            editable: true,\r\n            key: 'startTime',\r\n            ...this.getColumnSearchProps('startTime'),\r\n            sorter: (a, b) => this.compStringReverse(a.startTime, b.startTime),\r\n            sortDirections: ['descend', 'ascend'],\r\n        },   \r\n              \r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            \r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.save(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // -----------------------------Operation\r\n      ];\r\n\r\n      \r\n    }\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n    saveaction = () => {\r\n      console.log(\"saveAction\");\r\n    };\r\n\r\n\r\n    save(form, key) {\r\n      form.validateFields((error, row) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        const {users} = this.state;\r\n        const newData = [...users];\r\n        const index = newData.findIndex(item => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ users: newData, editingKey: '' });\r\n\r\n          const updateobj = {\r\n            id_st : newData[index].id_st,\r\n            id_tc : newData[index].id_tc,\r\n            name_app : newData[index].name_app,\r\n            id_app : newData[index].id_app,\r\n            startTime : newData[index].startTime\r\n          }\r\n\r\n          console.log(updateobj);\r\n          axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/members/${key}`, updateobj)\r\n          .then(res => console.log(res));\r\n        } else {\r\n          newData.push(row);\r\n          this.setState({ users: newData, editingKey: '' });\r\n        }\r\n      });\r\n    }\r\n    edit(key) {\r\n      this.setState({ editingKey: key });\r\n    }\r\n    // ---------------------------------Edit Result or Change State\r\n    componentDidMount(){\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/stusg')\r\n      .then(res => {\r\n        for ( let i = 0 ; i < res.data.length ; i++){\r\n          res.data[i].key = res.data[i]['idx'];\r\n          delete res.data[i].idx;\r\n\r\n          var startDate = new Date(res.data[i]['starttime']);\r\n          var resultStartDate = moment(startDate);\r\n          resultStartDate = resultStartDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].startTime = resultStartDate;\r\n          delete res.data[i].starttime;\r\n\r\n          var endDate = new Date(res.data[i]['endtime']);\r\n          var resultEndDate = moment(endDate);\r\n          resultEndDate = resultEndDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].endTime = resultEndDate\r\n          delete res.data[i].endtime;\r\n      \r\n        }\r\n        this.setState({\r\n          users : res.data,\r\n        })\r\n        });\r\n  }\r\n\r\n    onCollapse = (collapsed) => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    }\r\n\r\n// sorting \r\n    onChange = (value, dateString) => {\r\n      // console.log('Selected Time: ', value);\r\n      // console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    \r\n    onOk = (value) => {\r\n      var a = new Date(value[0]).getTime();\r\n      var b = new Date(value[1]).getTime();\r\n      // getTime Function : Date > milliseconds\r\n      if(a!== b){\r\n      const {users} = this.state\r\n      \r\n      this.setState({\r\n        startTime : value[0],\r\n        endTime : value[1]\r\n      }, function() {\r\n        var firstDate = moment(this.state.startTime._d, 'YYYY/M/D HH:mm')\r\n        var finishDate = moment(this.state.endTime._d, 'YYYY/M/D HH:mm')\r\n        firstDate = firstDate.format('YYYY/M/D HH:mm');\r\n        finishDate = finishDate.format('YYYY/M/D HH:mm');\r\n            // ------------------------------------------------startEndTime setState\r\n\r\n        var userTimesSet = [];\r\n        var sortingNumbers = [];\r\n        var sortingNumbersNon = [];\r\n          \r\n          for(let i = 0; i < users.length ; i++){\r\n            userTimesSet = (users.map(users => users.startTime));\r\n          }\r\n          this.setState({\r\n            userTimes : userTimesSet,\r\n          }, () => \r\n                  {\r\n                    for( let i = 0 ;i < users.length ; i++){\r\n                      \r\n                      userTimesSet[i] = moment(userTimesSet[i]).format('YYYY/MM/DD HH:mm');\r\n                      if(moment(userTimesSet[i]).isSameOrAfter(firstDate)){\r\n                        if(moment(userTimesSet[i]).isSameOrBefore(finishDate)){\r\n                          sortingNumbers.push(userTimesSet[i]);\r\n                        } \r\n                        else{\r\n                          sortingNumbersNon.push(userTimesSet[i]);\r\n                          console.log('not Before')\r\n                        }\r\n                      }\r\n                      else {\r\n                        sortingNumbersNon.push(userTimesSet[i]);\r\n                        console.log('not After')\r\n                      }\r\n                    }\r\n\r\n                    this.setState({\r\n                      sortingNumbers : sortingNumbers,\r\n                      sortingNumbersNon : sortingNumbersNon\r\n                    }, () => { \r\n                      const { users, sortingNumbers, sortingNumbersNon } = this.state\r\n                      console.log('SortingNumbers : ' + sortingNumbers );\r\n                      console.log('SortingNumbersNon : ' + sortingNumbersNon );\r\n                      function arrFilter(users) {\r\n                        for(let i = 0; i < sortingNumbers.length; i++){\r\n                          if(users.startTime === sortingNumbers[i]){\r\n                            return true;\r\n                          }\r\n                        }\r\n                        return false;\r\n                      }\r\n\r\n                      var sortingDates = users.filter(arrFilter);\r\n                      for(let i = 0; i < sortingDates.length; i++) {\r\n                        var startHours = moment(sortingDates[i]['startTime'], 'YYYY/M/D HH:mm');\r\n                        startHours = startHours.format('YYYY/M/D HH:mm');\r\n                        console.log('startHours : ', startHours);\r\n                        console.log('Here : ',firstDate, finishDate);\r\n                        \r\n                        var diff = moment.duration(moment(startHours).diff(moment(firstDate)));\r\n                        var days = parseInt(diff.asDays()); //84\r\n\r\n                        var hours = parseInt(diff.asHours()); //2039 hours, but it gives total hours in given miliseconds which is not expacted.\r\n\r\n                        hours = hours - days*24;  // 23 hours\r\n\r\n                        var minutes = parseInt(diff.asMinutes()); //122360 minutes,but it gives total minutes in given miliseconds which is not expacted.\r\n\r\n                        minutes = minutes - (days*24*60 + hours*60); //20 minutes.\r\n                        console.log(hours , minutes);\r\n                      }\r\n\r\n\r\n                      this.setState({\r\n                        users : sortingDates\r\n                      })\r\n                    }\r\n                  )\r\n                })\r\n              });\r\n              \r\n            }\r\n      else (\r\n        alert('시간을 확인해주세요.')\r\n      )\r\n}\r\n\r\n    // -------------------table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      \r\n      // Search Fc\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Fc\r\n\r\n      // -------------------table\r\n\r\n      logout = () => {\r\n        console.log(\"logout\");\r\n      }\r\n\r\n      confirmLogout = (e) =>{\r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n              .then(res => console.log(res.data));\r\n  \r\n        Cookies.remove('admin');\r\n        message.success('로그아웃 성공했습니다.');\r\n  \r\n        setTimeout(() => {\r\n          return this.props.history.push('/')\r\n        }, 1000)\r\n  \r\n      };\r\n      \r\n      cancelLogout = (e) => {\r\n        message.error('로그아웃 취소');\r\n      }\r\n      // ============================= 로그아웃\r\n\r\n      onChangePicker = (pagination, filters, sorter) => {\r\n        console.log('params', pagination, filters, sorter);\r\n      }\r\n      \r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n\r\n    \r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, users} = this.state\r\n\r\n        function selectedRowDelete(users){\r\n          for(let i = 0; i < selectedRowKeys.length ; i++)\r\n          {\r\n            if(users.key === selectedRowKeys[i])\r\n            {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        var rowArrayDelete = users.filter(selectedRowDelete)\r\n\r\n        this.setState({\r\n          users : rowArrayDelete,\r\n        })\r\n\r\n        var key = []\r\n        key = selectedRowKeys;\r\n\r\n        for(let j = 0 ; j < selectedRowKeys.length ; j++)\r\n        {\r\n          axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/stusg/delete/${key[j]}`)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n        }\r\n      }\r\n      \r\n      \r\n      \r\n      render() {\r\n        // console.log(this.state.users);\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              inputType: col.dataIndex === 'App' ? 'number' : 'text',\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              editing: this.isEditing(record),\r\n            }),\r\n          };\r\n        });\r\n\r\n        const rowSelection = {\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            this.setState({\r\n              selectedRowKeys : selectedRowKeys\r\n            }, () => {\r\n              console.log(this.state.selectedRowKeys);\r\n            })\r\n          } \r\n            \r\n          // getCheckboxProps: record => ({\r\n          //   disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n          //   name: record.name,\r\n          // }),\r\n        };\r\n        \r\n        const hasSelected = this.state.selectedRowKeys.length > 0;\r\n        return (\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['7']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                 \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>학생별 사용이력</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n\r\n              <Content style={{ margin: '5vh 30px 30px 30px' }}>\r\n                <div>\r\n                  \r\n                  <RangePicker\r\n                    showTime={{ format: 'HH:mm' }}\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder={['날짜 선택', '날짜 선택']}\r\n                    onChange={this.onChangePicker}\r\n                    onOk={this.onOk}\r\n                    style={{margin : '1% 0 1% 0'}}\r\n                  />\r\n                </div>\r\n\r\n                <div style={{ padding: 11, background: '#fff', minHeight: 360, clear:'both', marginBottom: '1%'}}>\r\n                <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.users}\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n                </div>\r\n                <div style={{float:\"right\"}}>\r\n                  <Button type=\"danger\" onClick ={this.delete} value={this.state.users.key} disabled={!hasSelected}>삭제</Button>\r\n                </div>\r\n              </Content>\r\n              \r\n            </Layout>\r\n          </Layout>\r\n    \r\n        );\r\n      }\r\n    }\r\n    \r\n\r\nexport default student;\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, DatePicker, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n// -----------------------Layout\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\nconst {RangePicker} = DatePicker;\r\n// -----------------------Layout\r\n\r\n// ----- Editer Func\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `${title}을 입력하세요.`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass app extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this._isMounted = false;\r\n      this.state = {\r\n        users : [],\r\n        collapsed: false,\r\n        searchText: '',\r\n        startTime: '',\r\n        endTime: '',\r\n        startEndTime : [],\r\n        selectedRowKeys : [],\r\n        userTimes : [],\r\n        sortingNumbersNon : [],\r\n        sortingNumbers : [],\r\n        editingKey : '',\r\n      }\r\n      \r\n      this.onOk = this.onOk.bind(this);\r\n      this.onChange = this.onChange.bind(this);\r\n      this.delete = this.delete.bind(this);\r\n      this.confirmLogout = this.confirmLogout.bind(this);\r\n      this.cancelLogout = this.cancelLogout.bind(this);\r\n\r\n      this.columns = [\r\n          {\r\n            title: '앱 이름',\r\n            dataIndex: 'name_app',\r\n            key: 'name_app',\r\n            width: '25%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('name_app'),\r\n            sorter: (a,b) => this.compStringReverse(a.name_app, b.name_app),\r\n            defaultSortOrder: 'descend',\r\n            \r\n          }, \r\n          \r\n          {\r\n            title: '앱 ID',\r\n            dataIndex: 'id_app',\r\n            width: '25%',\r\n            editable: true,\r\n            key: 'id_app',\r\n            ...this.getColumnSearchProps('id_app'),\r\n            sorter: (a, b) => this.compStringReverse(a.id_app - b.id_app),\r\n          }, \r\n          \r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.save(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // -----------------------------Operation\r\n      ];\r\n\r\n      \r\n    }\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n\r\n    save(form, key) {\r\n      form.validateFields((error, row) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        const {users} = this.state;\r\n        const newData = [...users];\r\n        const index = newData.findIndex(item => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ users: newData, editingKey: '' });\r\n\r\n          console.log('Key : ', key)\r\n\r\n          const updateobj = {\r\n            name_app : newData[index].name_app,\r\n            id_app : newData[index].id_app,\r\n            starttime : newData[index].startTime\r\n          }\r\n\r\n          console.log(updateobj);\r\n          axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/all/${key}`, updateobj)\r\n          .then(res => console.log(res));\r\n        }\r\n        else {\r\n          newData.push(row);\r\n          this.setState({ users: newData, editingKey: '' });\r\n        }\r\n      });\r\n    }\r\n\r\n    \r\n    edit(key) {\r\n      const {editingKey} = this.state\r\n      this.setState({ editingKey: key }, () => {console.log(editingKey)});\r\n    }\r\n    // ---------------------------------Edit Result or Change State\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/all')\r\n      .then(res => {\r\n\r\n        for ( let i = 0 ; i < res.data.length ; i++){\r\n          res.data[i].key = res.data[i]['idx'];\r\n          delete res.data[i].idx;\r\n\r\n          var startDate = new Date(res.data[i]['starttime']);\r\n          var resultStartDate = moment(startDate);\r\n          resultStartDate = resultStartDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].startTime = resultStartDate;\r\n          delete res.data[i].starttime;\r\n\r\n          var endDate = new Date(res.data[i]['endtime']);\r\n          var resultEndDate = moment(endDate);\r\n          resultEndDate = resultEndDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].endTime = resultEndDate\r\n          delete res.data[i].endtime;\r\n      \r\n        }\r\n        this.setState({\r\n          users : res.data,\r\n        })\r\n    });\r\n  }\r\n  componentWillMount(){\r\n    this._isMounted = false;\r\n  }\r\n\r\n    onCollapse = (collapsed) => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    }\r\n\r\n// sorting \r\n    onChange = (value, dateString) => {\r\n      // console.log('Selected Time: ', value);\r\n      // console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    \r\n    onOk = (value) => {\r\n      var a = new Date(value[0]).getTime();\r\n      var b = new Date(value[1]).getTime();\r\n      // getTime Function : Date > milliseconds\r\n      if(a!== b){\r\n      const {startEndTime, users} = this.state\r\n      \r\n      this.setState({\r\n        startTime : value[0],\r\n        endTime : value[1]\r\n      }, function() {\r\n        var firstDate = moment(this.state.startTime._d, 'YYYY/M/D HH:mm')\r\n        var finishDate = moment(this.state.endTime._d, 'YYYY/M/D HH:mm')\r\n        var dates = [];\r\n        firstDate = firstDate.format('YYYY/M/D HH:mm');\r\n        finishDate = finishDate.format('YYYY/M/D HH:mm');\r\n        dates.push(firstDate);\r\n        dates.push(finishDate);\r\n        this.setState({\r\n          startEndTime : dates,\r\n        }, () => {\r\n          console.log(startEndTime);\r\n        })\r\n            // ------------------------------------------------startEndTime setState\r\n\r\n        var userTimesSet = [];\r\n        var sortingNumbers = [];\r\n        var sortingNumbersNon = [];\r\n          \r\n          for(let i = 0; i < users.length ; i++){\r\n            userTimesSet = (users.map(users => users.startTime));\r\n          }\r\n          this.setState({\r\n            userTimes : userTimesSet,\r\n          }, () => \r\n                  {\r\n                    for( let i = 0 ;i < users.length ; i++){\r\n                      \r\n                      userTimesSet[i] = moment(userTimesSet[i]).format('YYYY/MM/DD HH:mm');\r\n                      if(moment(userTimesSet[i]).isSameOrAfter(firstDate)){\r\n                        if(moment(userTimesSet[i]).isSameOrBefore(finishDate)){\r\n                          sortingNumbers.push(userTimesSet[i]);\r\n                        } \r\n                        else{\r\n                          sortingNumbersNon.push(userTimesSet[i]);\r\n                          console.log('not Before')\r\n                        }\r\n                      }\r\n                      else {\r\n                        sortingNumbersNon.push(userTimesSet[i]);\r\n                        console.log('not After')\r\n                      }\r\n                    }\r\n\r\n                    this.setState({\r\n                      sortingNumbers : sortingNumbers,\r\n                      sortingNumbersNon : sortingNumbersNon\r\n                    }, () => { \r\n                      const { users, sortingNumbers, sortingNumbersNon } = this.state\r\n                      console.log('SortingNumbers : ' + sortingNumbers );\r\n                      console.log('SortingNumbersNon : ' + sortingNumbersNon );\r\n                      function arrFilter(users) {\r\n                        for(let i = 0; i < sortingNumbers.length; i++){\r\n                          if(users.startTime === sortingNumbers[i]){\r\n                            return true;\r\n                          }\r\n                        }\r\n                        return false;\r\n                      }\r\n\r\n                      var sortingDates = users.filter(arrFilter);\r\n                      this.setState({\r\n                        users : sortingDates\r\n                      })\r\n                    }\r\n                  )\r\n                })\r\n              });\r\n              \r\n            }\r\n      else (\r\n        alert('시간을 확인해주세요.')\r\n      )\r\n}\r\n\r\n    // -------------------table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      \r\n      // Search Fc\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Fc\r\n\r\n      // -------------------table\r\n\r\n      confirmLogout = (e) =>{\r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n              .then(res => console.log(res.data));\r\n  \r\n        Cookies.remove('admin');\r\n        message.success('로그아웃 성공했습니다.');\r\n  \r\n        setTimeout(() => {\r\n          return this.props.history.push('/')\r\n        }, 1000)\r\n  \r\n      };\r\n      \r\n      cancelLogout = (e) => {\r\n        message.error('로그아웃 취소');\r\n      }\r\n      // ============================= 로그아웃\r\n\r\n      onChangePicker = (pagination, filters, sorter) => {\r\n        console.log('params', pagination, filters, sorter);\r\n      }\r\n      \r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n\r\n    \r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, users} = this.state\r\n\r\n        function selectedRowDelete(users){\r\n          for(let i = 0; i < selectedRowKeys.length ; i++)\r\n          {\r\n            if(users.key === selectedRowKeys[i])\r\n            {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        var rowArrayDelete = users.filter(selectedRowDelete)\r\n\r\n        this.setState({\r\n          users : rowArrayDelete,\r\n        })\r\n\r\n        var key = []\r\n        key = selectedRowKeys;\r\n\r\n        for(let j = 0 ; j < selectedRowKeys.length ; j++)\r\n        {\r\n          axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/stlogs/delete/${key[j]}`)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n        }\r\n        \r\n      }\r\n      \r\n      \r\n      render() {\r\n        const hasSelected = this.state.selectedRowKeys.length > 0;\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              inputType: col.dataIndex === 'App' ? 'number' : 'text',\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              editing: this.isEditing(record),\r\n            }),\r\n          };\r\n        });\r\n\r\n        const rowSelection = {\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            this.setState({\r\n              selectedRowKeys : selectedRowKeys\r\n            }, () => {\r\n              console.log(this.state.selectedRowKeys);\r\n            })\r\n          } \r\n            \r\n          // getCheckboxProps: record => ({\r\n          //   disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n          //   name: record.name,\r\n          // }),\r\n        };\r\n        \r\n        console.log('users :',  this.state.users);\r\n\r\n        return (\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['5']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>앱별 사용이력</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n\r\n              <Content style={{ margin: '5vh 30px 30px 30px' }}>\r\n                <div>\r\n                  \r\n                  <RangePicker\r\n                    showTime={{ format: 'HH:mm' }}\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder={['날짜 선택', '날짜 선택']}\r\n                    onChange={this.onChangePicker}\r\n                    onOk={this.onOk}\r\n                    style={{margin : '1% 0 1% 0'}}\r\n                  />\r\n                </div>\r\n\r\n                <div style={{ padding: 11, background: '#fff', minHeight: 360, clear:'both', marginBottom: '1%'}}>\r\n                <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.users}\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n                </div>\r\n                <div style={{float:\"right\"}}>\r\n                  <Button type=\"danger\" onClick ={this.delete} value={this.state.users.key} disabled={!hasSelected}>삭제</Button>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n    \r\n        );\r\n      }\r\n    }\r\n    \r\n\r\nexport default app;\r\n","import React, { Component } from 'react';\r\nimport { Button, Form, Input, Icon, message } from 'antd';\r\nimport './login.css';\r\nimport axios from 'axios';\r\n// import Cookies from 'js-cookie';\r\n// console.log(Cookies.get(result.data.It_branches_id_br));\r\nclass login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n    this.state = {\r\n        loading: false,\r\n            formFieldInput : {\r\n                id : '',\r\n                password: '',\r\n            }    \r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/students')\r\n        .then(res => {\r\n            console.log(res.data);\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n            if(values.id_ad === 'tech'){\r\n                axios.post('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/login', values, {withCredentials: true})\r\n                .then(result => {\r\n                    \r\n                    if(result.data !== 'failed') {\r\n                        message.success('Admin Success');\r\n                        setTimeout(() => {\r\n                            this.props.history.push('/main')\r\n                            return window.location.reload();\r\n                          }, 1000)\r\n                    } else {\r\n                        console.log(result.data);\r\n                        message.error('사용자 정보를 확인해주세요.');\r\n                    }\r\n                })\r\n            }  else {\r\n                message.error('아이디 비밀번호를 확인하세요.');\r\n                this.setState({loading : false});\r\n            }\r\n        }\r\n        else {\r\n            message.error('접근 오류입니다.');\r\n            window.location.reload();\r\n            }\r\n        });\r\n    };\r\n    \r\n    enterLoading = () => {\r\n        this.setState({loading : true});\r\n    }\r\n      render() {\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return (\r\n            <div className = \"login\" style={{height : \"100vh\"}}>\r\n                    <div style={{textAlign : \"center\"}} >\r\n                        <div style={{position:\"relative\", top:\"32vh\", display: \"inline-block\", width : \"40vh\", height : \"35vh\", backgroundColor : \"white\", padding:\"2.5vh\"}}>\r\n                            <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n                            <Form.Item>\r\n                                    <div style ={{fontSize : \"3vh\", marginBottom :\"2vh\" }}>로그인</div>\r\n\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                            {getFieldDecorator('id_ad', {\r\n                                rules: [{ required: true, message: 'Please input your Id!' }],\r\n                            })(\r\n                                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"서버 관리자\" />\r\n                            )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                            {getFieldDecorator('Password', {\r\n                                rules: [{ required: true, message: 'Please input your Password!' }],\r\n                            })(\r\n                                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"관리자 비밀번호\" />\r\n                            )}\r\n                            </Form.Item>\r\n                            <Form.Item>\r\n                        \r\n                            <Button style={{width : \"100%\"}}type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading = {this.state.loading} onClick = {this.enterLoading}>\r\n                                Log in\r\n\r\n                            </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(login);\r\n\r\nexport default WrappedNormalLoginForm;\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, DatePicker, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport moment from 'moment';\r\n// -----------------------Layout\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\nconst {RangePicker} = DatePicker;\r\n// -----------------------Layout\r\n\r\n// ----- Editer Func\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `${title}을 입력하세요.`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass ingang extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this._isMounted = false;\r\n      this.state = {\r\n        users : [],\r\n        collapsed: false,\r\n        searchText: '',\r\n        selectedRowKeys : [],\r\n        sortingNumbersNon : [],\r\n        sortingNumbers : [],\r\n        editingKey : '',\r\n      }\r\n      \r\n      this.onChange = this.onChange.bind(this);\r\n      this.delete = this.delete.bind(this);\r\n      this.confirmLogout = this.confirmLogout.bind(this);\r\n      this.cancelLogout = this.cancelLogout.bind(this);\r\n\r\n      this.columns = [\r\n          {\r\n            title: '앱 이름',\r\n            dataIndex: 'name_app',\r\n            key: 'name_app',\r\n            width: '40%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('name_app'),\r\n            sorter: (a,b) => this.compStringReverse(a.name_app, b.name_app),\r\n            defaultSortOrder: 'descend',\r\n            \r\n          }, \r\n          \r\n          {\r\n            title: '앱 ID',\r\n            dataIndex: 'id_app',\r\n            width: '40%',\r\n            editable: true,\r\n            key: 'id_app',\r\n            ...this.getColumnSearchProps('id_app'),\r\n            sorter: (a, b) => this.compStringReverse(a.id_app - b.id_app),\r\n          }, \r\n            \r\n              \r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.save(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // -----------------------------Operation\r\n      ];\r\n\r\n      \r\n    }\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n\r\n    save(form, key) {\r\n      form.validateFields((error, row) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        const {users} = this.state;\r\n        const newData = [...users];\r\n        const index = newData.findIndex(item => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ users: newData, editingKey: '' });\r\n\r\n          console.log('Key : ', key)\r\n\r\n          const updateobj = {\r\n            name_app : newData[index].name_app,\r\n            id_app : newData[index].id_app,\r\n            starttime : newData[index].startTime\r\n          }\r\n\r\n          console.log(updateobj);\r\n          axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/members/${key}`, updateobj)\r\n          .then(res => console.log(res));\r\n        }\r\n        else {\r\n          newData.push(row);\r\n          this.setState({ users: newData, editingKey: '' });\r\n        }\r\n      });\r\n    }\r\n\r\n    \r\n    edit(key) {\r\n      const {editingKey} = this.state\r\n      this.setState({ editingKey: key }, () => {console.log(editingKey)});\r\n    }\r\n    // ---------------------------------Edit Result or Change State\r\n    componentDidMount(){\r\n      this._isMounted = true;\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ingangs/all')\r\n      .then(res => {\r\n\r\n        for ( let i = 0 ; i < res.data.length ; i++){\r\n          res.data[i].key = res.data[i]['idx'];\r\n          delete res.data[i].idx;\r\n\r\n          var startDate = new Date(res.data[i]['starttime']);\r\n          var resultStartDate = moment(startDate);\r\n          resultStartDate = resultStartDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].startTime = resultStartDate;\r\n          delete res.data[i].starttime;\r\n\r\n          var endDate = new Date(res.data[i]['endtime']);\r\n          var resultEndDate = moment(endDate);\r\n          resultEndDate = resultEndDate.format('YYYY/MM/DD hh:mm');\r\n          res.data[i].endTime = resultEndDate\r\n          delete res.data[i].endtime;\r\n        }\r\n        this.setState({\r\n          users : res.data,\r\n        })\r\n    });\r\n  }\r\n  componentWillMount(){\r\n    this._isMounted = false;\r\n  }\r\n\r\n    onCollapse = (collapsed) => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    }\r\n\r\n// sorting \r\n    onChange = (value, dateString) => {\r\n      // console.log('Selected Time: ', value);\r\n      // console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    onOk = (value) => {\r\n      var a = new Date(value[0]).getTime();\r\n      var b = new Date(value[1]).getTime();\r\n      // getTime Function : Date > milliseconds\r\n      if(a!== b){\r\n      const {startEndTime, users} = this.state\r\n      \r\n      this.setState({\r\n        startTime : value[0],\r\n        endTime : value[1]\r\n      }, function() {\r\n        var firstDate = moment(this.state.startTime._d, 'YYYY/M/D HH:mm')\r\n        var finishDate = moment(this.state.endTime._d, 'YYYY/M/D HH:mm')\r\n        var dates = [];\r\n        firstDate = firstDate.format('YYYY/M/D HH:mm');\r\n        finishDate = finishDate.format('YYYY/M/D HH:mm');\r\n        dates.push(firstDate);\r\n        dates.push(finishDate);\r\n        this.setState({\r\n          startEndTime : dates,\r\n        }, () => {\r\n          console.log(startEndTime);\r\n        })\r\n            // ------------------------------------------------startEndTime setState\r\n\r\n        var userTimesSet = [];\r\n        var sortingNumbers = [];\r\n        var sortingNumbersNon = [];\r\n          \r\n          for(let i = 0; i < users.length ; i++){\r\n            userTimesSet = (users.map(users => users.startTime));\r\n          }\r\n          this.setState({\r\n            userTimes : userTimesSet,\r\n          }, () => \r\n                  {\r\n                    for( let i = 0 ;i < users.length ; i++){\r\n                      \r\n                      userTimesSet[i] = moment(userTimesSet[i]).format('YYYY/MM/DD HH:mm');\r\n                      if(moment(userTimesSet[i]).isSameOrAfter(firstDate)){\r\n                        if(moment(userTimesSet[i]).isSameOrBefore(finishDate)){\r\n                          sortingNumbers.push(userTimesSet[i]);\r\n                        } \r\n                        else{\r\n                          sortingNumbersNon.push(userTimesSet[i]);\r\n                          console.log('not Before')\r\n                        }\r\n                      }\r\n                      else {\r\n                        sortingNumbersNon.push(userTimesSet[i]);\r\n                        console.log('not After')\r\n                      }\r\n                    }\r\n\r\n                    this.setState({\r\n                      sortingNumbers : sortingNumbers,\r\n                      sortingNumbersNon : sortingNumbersNon\r\n                    }, () => { \r\n                      const { users, sortingNumbers, sortingNumbersNon } = this.state\r\n                      console.log('SortingNumbers : ' + sortingNumbers );\r\n                      console.log('SortingNumbersNon : ' + sortingNumbersNon );\r\n                      function arrFilter(users) {\r\n                        for(let i = 0; i < sortingNumbers.length; i++){\r\n                          if(users.startTime === sortingNumbers[i]){\r\n                            return true;\r\n                          }\r\n                        }\r\n                        return false;\r\n                      }\r\n\r\n                      var sortingDates = users.filter(arrFilter);\r\n                      this.setState({\r\n                        users : sortingDates\r\n                      })\r\n                    }\r\n                  )\r\n                })\r\n              });\r\n              \r\n            }\r\n      else (\r\n        alert('시간을 확인해주세요.')\r\n      )\r\n}\r\n    // -------------------table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      \r\n      // Search Fc\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Fc\r\n\r\n      // -------------------table\r\n\r\n      confirmLogout = (e) =>{\r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n              .then(res => console.log(res.data));\r\n  \r\n        Cookies.remove('admin');\r\n        message.success('로그아웃 성공했습니다.');\r\n  \r\n        setTimeout(() => {\r\n          return this.props.history.push('/')\r\n        }, 1000)\r\n  \r\n      };\r\n      \r\n      cancelLogout = (e) => {\r\n        message.error('로그아웃 취소');\r\n      }\r\n      // ============================= 로그아웃\r\n\r\n      onChangePicker = (pagination, filters, sorter) => {\r\n        console.log('params', pagination, filters, sorter);\r\n      }\r\n      \r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n\r\n    \r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, users} = this.state\r\n\r\n        function selectedRowDelete(users){\r\n          for(let i = 0; i < selectedRowKeys.length ; i++)\r\n          {\r\n            if(users.key === selectedRowKeys[i])\r\n            {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        var rowArrayDelete = users.filter(selectedRowDelete)\r\n\r\n        this.setState({\r\n          users : rowArrayDelete,\r\n        })\r\n\r\n        var key = []\r\n        key = selectedRowKeys;\r\n\r\n        for(let j = 0 ; j < selectedRowKeys.length ; j++)\r\n        {\r\n          axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/stlogs/delete/${key[j]}`)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n        }\r\n        \r\n      }\r\n      \r\n      \r\n      render() {\r\n        const hasSelected = this.state.selectedRowKeys.length > 0;\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              inputType: col.dataIndex === 'App' ? 'number' : 'text',\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              editing: this.isEditing(record),\r\n            }),\r\n          };\r\n        });\r\n\r\n        const rowSelection = {\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            this.setState({\r\n              selectedRowKeys : selectedRowKeys\r\n            }, () => {\r\n              console.log(this.state.selectedRowKeys);\r\n            })\r\n          } \r\n            \r\n          // getCheckboxProps: record => ({\r\n          //   disabled: record.name === 'Disabled User', // Column configuration not to be checked\r\n          //   name: record.name,\r\n          // }),\r\n        };\r\n        \r\n        console.log('users :',  this.state.users);\r\n\r\n        return (\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['6']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>인강별 사용이력</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n\r\n              <Content style={{ margin: '5vh 30px 30px 30px' }}>\r\n                <div>\r\n                  \r\n                  <RangePicker\r\n                    showTime={{ format: 'HH:mm' }}\r\n                    format=\"YYYY-MM-DD HH:mm\"\r\n                    placeholder={['날짜 선택', '날짜 선택']}\r\n                    onChange={this.onChangePicker}\r\n                    onOk={this.onOk}\r\n                    style={{margin : '1% 0 1% 0'}}\r\n                  />\r\n                </div>\r\n\r\n                <div style={{ padding: 11, background: '#fff', minHeight: 360, clear:'both', marginBottom: '1%'}}>\r\n                <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.users}\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n                </div>\r\n                <div style={{float:\"right\"}}>\r\n                  <Button type=\"danger\" onClick ={this.delete} value={this.state.users.key} disabled={!hasSelected}>삭제</Button>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n    \r\n        );\r\n      }\r\n    }\r\n    \r\n\r\nexport default ingang;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport './main.css';\r\nimport {Layout, Menu, Icon, Breadcrumb, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport axios from 'axios';\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nconst data = {\r\n\tlabels: [\r\n\t\t'메신저',\r\n\t\t'인터넷',\r\n    '음악',\r\n    '게임',\r\n\r\n\t],\r\n\tdatasets: [{\r\n\t\tdata: [300, 100, 200, 150],\r\n\t\tbackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n    '#FFCE56',\r\n    '#C2EE56'\r\n\t\t],\r\n\t\thoverBackgroundColor: [\r\n\t\t'#FF6384',\r\n\t\t'#36A2EB',\r\n    '#FFCE56',\r\n    '#C2EE56'\r\n\t\t]\r\n    }],\r\n    text: '45'\r\n};\r\n\r\nconst dataSecond = {\r\n  labels: [\r\n\t\t'타 인강1',\r\n\t\t'타 인강2',\r\n    '타 인강3',\r\n    '타 인강4',\r\n\t],\r\n\tdatasets: [{\r\n\t\tdata: [300, 100, 200, 150],\r\n\t\tbackgroundColor: [\r\n\t\t'#86A2EB',\r\n    '#BFCE56',\r\n    '#AE4384',\r\n    '#F9FE56'\r\n\t\t],\r\n\t\thoverBackgroundColor: [\r\n\t\t'#86A2EB',\r\n    '#BFCE56',\r\n    '#AE4384',\r\n    '#F9FE56'\r\n\t\t]\r\n    }],\r\n    text: '45'\r\n}\r\nclass main extends Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        collapsed: false,\r\n        users : [],\r\n        data : [],\r\n      };\r\n    }\r\n    \r\n\r\n    componentDidMount(){\r\n      \r\n    };\r\n\r\n    onCollapse = (collapsed) => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n      }\r\n\r\n    // ============================= 로그아웃 \r\n\r\n    confirmLogout = (e) =>{\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n            .then(res => console.log(res.data));\r\n\r\n      Cookies.remove('admin');\r\n      message.success('로그아웃 성공했습니다.');\r\n\r\n      setTimeout(() => {\r\n        return this.props.history.push('/')\r\n      }, 1000)\r\n\r\n    };\r\n    \r\n    cancelLogout = (e) => {\r\n      message.error('로그아웃 취소');\r\n    }\r\n    // ============================= 로그아웃\r\n\r\n\r\n      render() {\r\n\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /><span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  \r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    <Icon type=\"logout\"/>\r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n                <Header style={{ background: '#1DA57A', padding: 0 }}>\r\n                    <Breadcrumb style={{ margin: '12px 0'}}>\r\n                        <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"3vh\", fontWeight :\"600\", fontSize : \"3.2vh\"}}>대시보드</h1></Breadcrumb.Item>\r\n                    </Breadcrumb>\r\n                </Header>\r\n              <Content style={{ margin: '0 16px' }}>\r\n          <Fragment>\r\n            <div className = \"main\">\r\n                <div style={{height: \"80vh\", width: \"auto\", display:\"flex\", margin : \"0 20vh 0 0\"}}>\r\n                    <div style={{flex : \"1\", marginTop : \"10vh\", marginBottom : \"10vh\"}}>\r\n                        <Doughnut \r\n                        data={data} \r\n                        // width={10}\r\n                        // height={30}\r\n                        options={{\r\n                            legend : {\r\n                                display: true,\r\n                                position: 'bottom',\r\n                                labels: {\r\n                                    fontSize: 19,\r\n                                    fontColor: \"black\",\r\n                                    fonrWeight : 800,\r\n                                    fontFamily : \"sans-serif\",\r\n                                    padding : 30\r\n                                }\r\n                            },\r\n                            title : {\r\n                                display : true,\r\n                                text : \"앱별 사용량 차트\",\r\n                                color : \"black\",\r\n                                fontSize : 25,\r\n                                position : \"top\",\r\n                                padding : 30\r\n                            },\r\n                                responsive: true,\r\n                                maintainAspectRatio: false,\r\n                        }}/>\r\n                    </div>\r\n                        \r\n                    <div style={{flex : \"1.3\", marginTop : \"10vh\", marginBottom : \"10vh\"}}>\r\n                        <Doughnut                 \r\n                            data={dataSecond} \r\n                            // width={30}\r\n                            // height={30}\r\n                            options={{\r\n                            legend : {\r\n                                display: true,\r\n                                position: 'bottom',\r\n                                labels: {\r\n                                    fontSize: 17,\r\n                                    fontColor: \"black\",\r\n                                    fonrWeight : 800,\r\n                                    fontFamily : \"sans-serif\",\r\n                                    padding : 30\r\n                                }\r\n                            },\r\n                            title : {\r\n                                display : true,\r\n                                text : \"타 인강별 사용량 차트\",\r\n                                color : \"black\",\r\n                                fontSize : 25,\r\n                                position : \"top\",\r\n                                padding : 30\r\n                            },\r\n                                responsive: true,\r\n                                maintainAspectRatio: false,\r\n\r\n                            }}/>\r\n                            \r\n                    </div>\r\n                </div>    \r\n            </div>\r\n          </Fragment>\r\n          </Content>\r\n            </Layout>\r\n          </Layout>\r\n        );\r\n    }\r\n}\r\n    \r\n\r\nexport default main;\r\n","import React, { Component, Fragment } from 'react';\r\nimport {Layout, Icon} from 'antd';\r\n\r\nconst {Footer} = Layout;\r\n\r\nclass footer extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>            \r\n                <Footer style={{ textAlign: 'center', color :\"white\", backgroundColor : \"#1DA57A\", padding :\"1.5vh\", height: \"5.6vh\", marginLeft : \"20vh\"}}>\r\n                    <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" /> TechNonia Design ©2019 Created by J <Icon type=\"heart\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" />\r\n                </Footer>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default footer;","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios'\r\nimport Highlighter from 'react-highlight-words';\r\nimport Cookies from 'js-cookie'\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 1 },\r\n  wrapperCol: { span: 23 },\r\n};\r\n// ---------------------- Editer Function Start\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\n\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `${title}을 입력하세요.`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass prohibition extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: false,\r\n            selectedRowKeys : [],\r\n            selectedRowKeysFalse : [],\r\n            searchText: '',\r\n            editingKey : '',\r\n            appTrue : [],\r\n            appFalse : [],\r\n          }\r\n        this.delete = this.delete.bind(this);\r\n        this.confirmLogout = this.confirmLogout.bind(this);\r\n        this.cancelLogout = this.cancelLogout.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.selectedRowDelete = this.selectedRowDelete.bind(this);\r\n        this.selectedRowTrueRight = this.selectedRowTrueRight.bind(this);\r\n        this.selectedRowTrueLeft = this.selectedRowTrueLeft.bind(this);\r\n        this.selectedRowFalseRight = this.selectedRowFalseRight.bind(this);\r\n        this.selectedRowFalseLeft = this.selectedRowFalseLeft.bind(this);\r\n        \r\n        // ======================================================================================== Left - True 테이블 \r\n        this.columnsFalse = [\r\n          {\r\n            title: '이름',\r\n            dataIndex: 'name_app',\r\n            key: 'name_app',\r\n            width: '35%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('name_app'),\r\n            sorter: (a,b) => this.compStringReverse(a.name_app, b.name_app),\r\n            defaultSortOrder: 'descend',\r\n            \r\n          }, \r\n          \r\n          {\r\n            title: '앱 번호',\r\n            dataIndex: 'id_app',\r\n            width: '35%',\r\n            editable: true,\r\n            key: 'id_app',\r\n            ...this.getColumnSearchProps('id_app'),\r\n            sorter: (a,b) => this.compStringReverse(a.id_app, b.id_app),\r\n          },            \r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          width: '25%',\r\n          render: (text, record) => {\r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.savefalse(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n      ];\r\n          // ======================================================================================== Left - True 테이블 \r\n\r\n          // ======================================================================================== Right - False 테이블 \r\n        \r\n        this.columns = [\r\n          {\r\n          title: '이름',\r\n          dataIndex: 'name_app',\r\n          key: 'name_app',\r\n          width: '35%',\r\n          editable: true,\r\n          sorter: (a,b) => this.compStringReverse(a.name_app, b.name_app),\r\n          defaultSortOrder: 'descend',\r\n          ...this.getColumnSearchProps('name_app'),\r\n          }, \r\n      \r\n          {\r\n          title: '앱 번호',\r\n          dataIndex: 'id_app',\r\n          width: '35%',\r\n          editable: true,\r\n          key: 'id_app',\r\n          ...this.getColumnSearchProps('id_app'),\r\n          sorter: (a,b) => this.compStringReverse(a.id_app, b.id_app),\r\n          },            \r\n          // -----------------------------Operation\r\n          {\r\n              title: '수정',\r\n              dataIndex: 'operation',\r\n              width: '25%',\r\n              render: (text, record) => {\r\n                  const editable = this.isEditing(record);\r\n                  return (\r\n                      <div>\r\n                          {editable ? (\r\n                              <span>\r\n                              <EditableContext.Consumer>      \r\n                                      {form => (\r\n                                          <Popconfirm\r\n                                          title=\"저장하시겠습니까?\"\r\n                                          onConfirm={() => this.save(form, record.key)}\r\n                                          okText=\"확인\" cancelText=\"취소\"\r\n                                          >\r\n                                          <a\r\n                                            href=\"localhost:3000\"\r\n                                            style={{ marginRight: 8 , float : \"left\"}}\r\n                                            >\r\n                                            저장\r\n                                          </a>\r\n                                        </Popconfirm>\r\n                                      )}\r\n                              </EditableContext.Consumer>\r\n                                    \r\n                                  <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                                      취소\r\n                                  </div>\r\n                              </span>\r\n                              ) \r\n                                \r\n                              : ( <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>)}\r\n                              </div>\r\n                            );\r\n                          },\r\n                        },\r\n              ];\r\n        // ======================================================================================== Right - False 테이블 \r\n\r\n    }\r\n\r\n    isEditing = record => record.key === this.state.editingKey; // Edit 활성화\r\n\r\n    // 편집 취소\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n\r\n    // 편집 저장 Left - True 테이블\r\n    save(form, key) {\r\n        form.validateFields((error, row) => {\r\n          if (error) {\r\n            return;\r\n          }\r\n          const {appTrue} = this.state;\r\n          const newData = [...appTrue];\r\n          console.log(appTrue, 'appTrue입니다.')\r\n          const index = newData.findIndex(item => key === item.key);\r\n          if (index > -1) {\r\n            const item = newData[index];\r\n            newData.splice(index, 1, {\r\n              ...item,\r\n              ...row,\r\n            });\r\n            this.setState({ appTrue: newData, editingKey: '' });\r\n  \r\n            console.log('Key : ', key)\r\n  \r\n            const updateobj = {\r\n              \r\n              name_app : newData[index].name_app,\r\n              id_app : newData[index].id_app,\r\n\r\n            }\r\n  \r\n            console.log(updateobj);\r\n            axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/disableapps/${key}`, updateobj)\r\n            .then(res => console.log(res));\r\n            message.success(\"수정 완료\")\r\n          }\r\n          else {\r\n            newData.push(row);\r\n            this.setState({ appTrue: newData, editingKey: '' });\r\n          }\r\n        });\r\n      }\r\n\r\n    // 편집 저장 Right - False 테이블\r\n    savefalse(form, key) {\r\n        form.validateFields((error, row) => {\r\n        if (error) {\r\n            return;\r\n        }\r\n        const {appFalse} = this.state;\r\n        const newData = [...appFalse];\r\n        console.log(key, 'key값')\r\n        const index = newData.findIndex(item => key === item.key);\r\n        console.log(index, 'index값');\r\n        console.log(newData, 'newData');\r\n        if (index > -1) {\r\n            const item = newData[index];\r\n            newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n            });\r\n            this.setState({ appFalse: newData, editingKey: '' });\r\n\r\n            console.log('Key : ', key)\r\n\r\n            const updateobj = {\r\n            name_app : newData[index].name_app,\r\n            id_app : newData[index].id_app,\r\n            \r\n            }\r\n\r\n            console.log(updateobj);\r\n            axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/disableapps/${key}`, updateobj)\r\n            .then(res => console.log(res));\r\n            message.success(\"수정 완료\")\r\n        }\r\n        else {\r\n            newData.push(row);\r\n            this.setState({ appFalse: newData, editingKey: '' });\r\n        }\r\n        });\r\n    }\r\n\r\n    edit(key) {\r\n      const {editingKey} = this.state\r\n      this.setState({ editingKey: key }, () => {console.log(editingKey)});\r\n    }\r\n\r\n    \r\n    componentDidMount(){\r\n      \r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/disableapps')\r\n        .then(res => {\r\n          for ( let i = 0 ; i < res.data.length ; i++){\r\n            res.data[i].key = res.data[i]['idx'];\r\n            delete res.data[i].idx;\r\n            }\r\n          this.setState({\r\n            appFalse : res.data\r\n          })\r\n        });\r\n        \r\n        axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ableapps')\r\n        .then(res => {\r\n          for ( let i = 0 ; i < res.data.length ; i++){\r\n            res.data[i].key = res.data[i]['idx'];\r\n            delete res.data[i].idx;\r\n          }\r\n          this.setState({\r\n            appTrue : res.data\r\n          })\r\n        });\r\n    }\r\n  \r\n\r\n    // 슬라이드 바 True & False\r\n    onCollapse = (collapsed) => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n    }\r\n      \r\n\r\n    // Search in Table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      // Sorting 함수 in Table\r\n\r\n      onChange = (value, dateString) => {\r\n        // console.log('Selected Time: ', value);\r\n        // console.log('Formatted Selected Time: ', dateString);\r\n      }\r\n\r\n      \r\n      // Search Function\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Function\r\n\r\n      // -------------------table\r\n\r\n    // ============================= 로그아웃 \r\n\r\n    confirmLogout = (e) =>{\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n            .then(res => console.log(res.data));\r\n\r\n      Cookies.remove('admin');\r\n      message.success('로그아웃 성공했습니다.');\r\n\r\n      setTimeout(() => {\r\n        return this.props.history.push('/')\r\n      }, 1000)\r\n\r\n    };\r\n    \r\n    cancelLogout = (e) => {\r\n      message.error('로그아웃 취소');\r\n    }\r\n    // ============================= 로그아웃\r\n\r\n      // Sorting for Korean\r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n      // Sorting for Korean\r\n\r\n      selectedRowDelete(appFalse) {\r\n        const {selectedRowKeysFalse} = this.state\r\n            for(let i = 0; i < selectedRowKeysFalse.length ; i++){\r\n            if(appFalse.key === selectedRowKeysFalse[i])\r\n            {\r\n                return false;\r\n            }\r\n        }\r\n            return true;\r\n      }\r\n      \r\n\r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const {selectedRowKeysFalse, appFalse} = this.state\r\n        var rowArrayDelete = appFalse.filter(this.selectedRowDelete)\r\n        var key = []\r\n\r\n            this.setState({\r\n                appFalse : rowArrayDelete,\r\n            })\r\n\r\n            key = selectedRowKeysFalse;\r\n    \r\n            for(let j = 0 ; j < selectedRowKeysFalse.length ; j++)\r\n            {\r\n              axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/delete/${key[j]}`)\r\n              .then(res => {\r\n                console.log(res);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              })\r\n            }\r\n    }\r\n\r\n    selectedRowTrueRight(appTrue) {\r\n      const {selectedRowKeys} = this.state\r\n      for(let i = 0; i < selectedRowKeys.length ; i++){\r\n          if(appTrue.key === selectedRowKeys[i])\r\n          {\r\n              return false;\r\n          }\r\n      }\r\n          return true;\r\n    }\r\n    selectedRowFalseRight(appTrue) {\r\n      const {selectedRowKeys} = this.state\r\n      for(let i = 0; i < selectedRowKeys.length ; i++){\r\n      if(appTrue.key === selectedRowKeys[i])\r\n      {\r\n          return true;\r\n      }\r\n      }\r\n          return false;\r\n    }\r\n\r\n    selectedRowTrueLeft(appFalse) {\r\n        const {selectedRowKeysFalse} = this.state\r\n        for(let i = 0; i < selectedRowKeysFalse.length ; i++){\r\n            if(appFalse.key === selectedRowKeysFalse[i])\r\n            {\r\n                return false\r\n            }\r\n        }\r\n            return true;\r\n    }\r\n    selectedRowFalseLeft(appFalse) {\r\n        const {selectedRowKeysFalse} = this.state\r\n        for(let i = 0; i < selectedRowKeysFalse.length ; i++){\r\n          if(appFalse.key === selectedRowKeysFalse[i])\r\n              {\r\n                  return true;\r\n              }\r\n          }\r\n              return false;\r\n    }\r\n\r\n    // True >> False로 가는 함수 \r\n    rightButton = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, appFalse, appTrue} = this.state\r\n        var key = []\r\n        key = selectedRowKeys;\r\n        \r\n        \r\n        \r\n        var rowArrayRight = appTrue.filter(this.selectedRowTrueRight)\r\n        var rowArrayRightFailed = appTrue.filter(this.selectedRowFalseRight)\r\n        var appFalseList = appFalse.concat(rowArrayRightFailed)\r\n        \r\n        this.setState({\r\n            appTrue : rowArrayRight,\r\n            appFalse : appFalseList,\r\n        })\r\n\r\n        for(let i = 0 ; i < selectedRowKeys.length ; i++){\r\n            axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/update/right/${key[i]}`)\r\n            .then(res => console.log(res.data));\r\n        }\r\n    }\r\n\r\n    // False >> True로 가는 함수 \r\n    leftButton = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeysFalse, appFalse, appTrue} = this.state\r\n        var key = []\r\n        key = selectedRowKeysFalse;\r\n\r\n        \r\n        var rowArrayRight = appFalse.filter(this.selectedRowTrueLeft)\r\n\r\n        var rowArrayRightFailed = appFalse.filter(this.selectedRowFalseLeft)\r\n        var appFalseList = appTrue.concat(rowArrayRightFailed)\r\n        this.setState({\r\n            appFalse : rowArrayRight,\r\n            appTrue : appFalseList,\r\n        })\r\n\r\n        for(let i = 0 ; i < selectedRowKeysFalse.length ; i++){\r\n            axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/update/left/${key[i]}`)\r\n            .then(res => console.log(res));\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      const {appFalse} = this.state;\r\n      var newData = [...appFalse];\r\n      this.props.form.validateFields((err, values) => {\r\n        if (!err) {\r\n          console.log('Received values of form: ', values);\r\n          if(values.hasOwnProperty('name_app') || values.hasOwnProperty('id_app')){\r\n            console.log(\"success\");\r\n            const insertObj = {\r\n              name_app : values.name_app,\r\n              id_app : values.id_app,\r\n            }\r\n            \r\n            console.log(insertObj);\r\n\r\n            axios.post(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/disableapps/insert`, insertObj)\r\n            .then(res => {\r\n              res.data.key = res.data.idx;\r\n              delete res.data.idx;\r\n              console.log(res.data);\r\n              newData = newData.concat(res.data);\r\n              this.setState({\r\n                appFalse : newData,\r\n              })\r\n              window.location.reload();\r\n            });\r\n          }\r\n        }\r\n        else {\r\n          console.log(\"실패\");\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        getFieldDecorator, getFieldError, isFieldTouched,\r\n          } = this.props.form;\r\n          const appNameError = isFieldTouched('name_app') && getFieldError('name_app');\r\n          const appIdError = isFieldTouched('id_app') && getFieldError('id_app');\r\n        const components = {\r\n            body: {\r\n              row: EditableFormRow,\r\n              cell: EditableCell,\r\n            },\r\n          };\r\n\r\n          const hasSelected = this.state.selectedRowKeys.length > 0; // True > False\r\n          const hasSelectedFalse = this.state.selectedRowKeysFalse.length > 0; // False > True\r\n            // (1) True\r\n          const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n              return col;\r\n            }\r\n            return {\r\n              ...col,\r\n              onCell: record => ({\r\n                record,\r\n                inputType: col.dataIndex === 'id_app' ? 'text' : 'text', // 'number' >> 편집시 하나씩 증가 이용 가능\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: this.isEditing(record),\r\n              }),\r\n            };\r\n          });\r\n\r\n          // (2) False\r\n          const columnsFalse = this.columnsFalse.map((col) => {\r\n            if (!col.editable) {\r\n              return col;\r\n            }\r\n            return {\r\n              ...col,\r\n              onCell: record => ({\r\n                record,\r\n                inputType: col.dataIndex === 'id_app' ? 'text' : 'text', // 'number'\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: this.isEditing(record),\r\n              }),\r\n            };\r\n          });\r\n  \r\n          const rowSelection = {\r\n            onChange: (selectedRowKeys, selectedRows) => {\r\n                const {selectedRowKeysFalse} = this.state;\r\n                console.log(selectedRowKeys, 'True');\r\n                if(selectedRowKeysFalse.length > 0){\r\n                    message.error('한 테이블만 선택하세요.');\r\n                    setTimeout(function() {\r\n                        window.location.reload();\r\n                    }, 1000);\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        selectedRowKeys : selectedRowKeys\r\n                      })\r\n                }\r\n              \r\n            } \r\n        };\r\n        const rowSelectionFalse = {\r\n            onChange: (selectedRowKeysFalse, selectedRows) => {\r\n                const {selectedRowKeys} = this.state;\r\n                if(selectedRowKeys.length > 0){\r\n                    message.error('한 테이블만 선택하세요.');\r\n                    setTimeout(function() {\r\n                        window.location.reload();\r\n                    }, 1300);\r\n                }\r\n                else {\r\n                    this.setState({\r\n                        selectedRowKeysFalse : selectedRowKeysFalse\r\n                    })\r\n                }\r\n            } \r\n        };\r\n        console.log(this.state.appTrue);\r\n        console.log(this.state.appFalse);    \r\n\r\n        return (\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"id_app-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['2']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>사용금지 목록</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n\r\n              <Content style={{ margin: '10vh 30px 0vh 30px'}}>\r\n\r\n              <div style={{ padding: 11, background: '#fff', minHeight: 360, marginBottom: '1%' ,marginLeft: \"5%\", float : \"left\", width: \"40%\"}}>\r\n              <div style={{textAlign : \"center\", marginBottom:\"1.5vh\",marginTop : \"1vh\", fontWeight : \"600\", fontSize : \"2vh\"}}> 사용 가능 목록 </div>\r\n            \r\n            \r\n                <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.appTrue}\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n            </div>\r\n              \r\n            \r\n            <div style = {{ margin : \"20vh 0 0 4vh\", float: \"left\"}}>\r\n                \r\n                <div>\r\n                <Button type=\"primary\" style={{width : \"5.3vh\", marginBottom : \"3vh\"}} onClick ={this.rightButton} disabled={!hasSelected}>\r\n                    <Icon type=\"right\" />\r\n                </Button>\r\n                </div>\r\n                <div>\r\n                    <Button type=\"primary\" style={{width : \"5.3vh\"}} onClick ={this.leftButton} disabled={!hasSelectedFalse}>\r\n                        <Icon type=\"left\" />\r\n                    </Button>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n\r\n            <div style={{ padding: 11, background: '#fff', minHeight: 360, marginBottom: '1%', float : \"left\", clear : \"none\", width: \"40%\", marginLeft : \"4vh\"}}>\r\n            <div style={{textAlign : \"left\"}}>\r\n              <Button type=\"danger\" onClick = {this.delete} disabled={!hasSelectedFalse} style ={{float: \"left\", marginBottom : \"1vh\", marginTop : \"-0.5vh\"}}>삭제</Button> \r\n              <div style={{textAlign : \"center\",marginRight : \"7vh\",  fontWeight : \"600\", fontSize : \"2vh\", marginTop : \"1vh\"}}>\r\n              사용 금지 목록\r\n              </div></div>\r\n              <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.appFalse}\r\n                    columns={columnsFalse}\r\n                    rowSelection={rowSelectionFalse}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n              <Form layout=\"inline\" style={{marginLeft: \"10%\", display: \"flex\"}}>\r\n                  <Form.Item\r\n                  {...formItemLayout}\r\n                    validateStatus={appNameError ? 'error' : ''}\r\n                    help={appNameError || ''}\r\n                    style={{width : \"37%\", marginRight:\"0\"}}\r\n                    \r\n                  ><div>\r\n                    {getFieldDecorator('name_app', {\r\n                      rules: [{ required: true, message: '앱 이름을 입력하세요.' }],\r\n                    })(\r\n                      <Input placeholder=\"입력\" />\r\n                    )}\r\n                    </div>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                  {...formItemLayout}\r\n                    validateStatus={appIdError ? 'error' : ''}\r\n                    help={appIdError || ''}\r\n                    style={{width : \"37%\", marginRight:\"0\"}}\r\n                  ><div>\r\n                    {getFieldDecorator('id_app', {\r\n                      rules: [{ required: true, message: '앱 번호를 입력하세요.' }],\r\n                    })(\r\n                      <Input placeholder=\"입력\" />\r\n                    )}</div>\r\n                  </Form.Item>\r\n                  <Form.Item style={{float: \"right\"}}\r\n                  {...formItemLayout}>\r\n                      <Popconfirm title = \"추가하시겠습니까?\" onConfirm={this.handleSubmit} onCancel={() => {console.log(\"취소\")}} okText=\"확인\" cancelText=\"취소\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                      >\r\n                        추가\r\n                      </Button>\r\n                      </Popconfirm>\r\n                  </Form.Item>\r\n                </Form>\r\n\r\n            </div>\r\n\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form.create()(prohibition);","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n// -----------------------Layout\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n// -----------------------Layout\r\n\r\n// ----- Editer Func\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span: 1 },\r\n  wrapperCol: { span: 23 },\r\n};\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\n\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `${title}을 입력하세요.`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass settingIngang extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        users : [],\r\n        collapsed: false,\r\n        searchText: '',\r\n        selectedRowKeys : [],\r\n        sortingNumbersNon : [],\r\n        sortingNumbers : [],\r\n        editingKey : '',\r\n\r\n      }\r\n      \r\n      this.onChange = this.onChange.bind(this);\r\n      this.delete = this.delete.bind(this);\r\n      this.confirmLogout = this.confirmLogout.bind(this);\r\n      this.cancelLogout = this.cancelLogout.bind(this);\r\n\r\n      this.columns = [\r\n          {\r\n            title: '앱 이름',\r\n            dataIndex: 'name_app',\r\n            key: 'name_app',\r\n            width: '40%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('name_app'),\r\n            sorter: (a,b) => this.compStringReverse(a.name_app, b.name_app),\r\n            defaultSortOrder: 'descend',\r\n            \r\n          }, \r\n          \r\n          {\r\n            title: '앱 ID',\r\n            dataIndex: 'id_app',\r\n            width: '40%',\r\n            editable: true,\r\n            key: 'id_app',\r\n            ...this.getColumnSearchProps('id_app'),\r\n            sorter: (a, b) => this.compStringReverse(a.id_app, b.id_app),\r\n          }, \r\n\r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.save(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // -----------------------------Operation\r\n      ];\r\n\r\n      \r\n    }\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n\r\n    save(form, key) {\r\n      form.validateFields((error, row) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        const {users} = this.state;\r\n        const newData = [...users];\r\n        const index = newData.findIndex(item => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ users: newData, editingKey: '' });\r\n\r\n          console.log('Key : ', key)\r\n\r\n          const updateobj = {\r\n            name_app : newData[index].name_app,\r\n            id_app : newData[index].id_app,\r\n          }\r\n\r\n          console.log(updateobj);\r\n          axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ingangs/update/${key}`, updateobj)\r\n          .then(res => console.log(res));\r\n        }\r\n        else {\r\n          newData.push(row);\r\n          this.setState({ users: newData, editingKey: '' });\r\n        }\r\n      });\r\n    }\r\n\r\n    \r\n    edit(key) {\r\n      const {editingKey} = this.state\r\n      this.setState({ editingKey: key }, () => {console.log(editingKey)});\r\n    }\r\n    // ---------------------------------Edit Result or Change State\r\n    componentDidMount(){\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ingangs')\r\n      .then(res => {\r\n        for ( let i = 0 ; i < res.data.length ; i++){\r\n          res.data[i].key = res.data[i]['idx'];\r\n          delete res.data[i].idx;\r\n      \r\n        }\r\n        this.setState({\r\n          users : res.data,\r\n      })\r\n    });\r\n  }\r\n\r\n    onCollapse = (collapsed) => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    }\r\n\r\n  // sorting \r\n    onChange = (value, dateString) => {\r\n      // console.log('Selected Time: ', value);\r\n      // console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    \r\n\r\n    // -------------------table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      \r\n      // Search Fc\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Fc\r\n\r\n      // -------------------table\r\n\r\n    \r\n\r\n       // ============================= 로그아웃 \r\n\r\n    confirmLogout = (e) =>{\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n            .then(res => console.log(res.data));\r\n\r\n      Cookies.remove('admin');\r\n      message.success('로그아웃 성공했습니다.');\r\n\r\n      setTimeout(() => {\r\n        return this.props.history.push('/')\r\n      }, 1000)\r\n\r\n    };\r\n    \r\n    cancelLogout = (e) => {\r\n      message.error('로그아웃 취소');\r\n    }\r\n    // ============================= 로그아웃\r\n\r\n      onChangePicker = (pagination, filters, sorter) => {\r\n        console.log('params', pagination, filters, sorter);\r\n      }\r\n      \r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n\r\n    \r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, users} = this.state\r\n\r\n        function selectedRowDelete(users){\r\n          for(let i = 0; i < selectedRowKeys.length ; i++)\r\n          {\r\n            if(users.key === selectedRowKeys[i])\r\n            {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        var rowArrayDelete = users.filter(selectedRowDelete)\r\n\r\n        this.setState({\r\n          users : rowArrayDelete,\r\n        })\r\n\r\n        var key = []\r\n        key = selectedRowKeys;\r\n\r\n        for(let j = 0 ; j < selectedRowKeys.length ; j++)\r\n        {\r\n          axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ingangs/delete/${key[j]}`)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n        }\r\n        \r\n      }\r\n      \r\n       handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {users} = this.state;\r\n        var newData = [...users];\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n            if(values.hasOwnProperty('name_app') || values.hasOwnProperty('id_app')){\r\n              console.log(\"success\");\r\n              const insertObj = {\r\n                name_app : values.name_app,\r\n                id_app : values.id_app,\r\n              }\r\n              \r\n              console.log(insertObj);\r\n\r\n              axios.post(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/ingangs/insert`, insertObj)\r\n              .then(res => {\r\n                res.data.key = res.data.idx;\r\n                delete res.data.idx;\r\n                console.log(res.data);\r\n                newData = newData.concat(res.data);\r\n                this.setState({\r\n                  users : newData,\r\n                })\r\n                window.location.reload();\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            message.error('모두 입력해주세요.');\r\n            console.log(\"실패\");\r\n          }\r\n        });\r\n      }\r\n\r\n      render() {\r\n        const {\r\n          getFieldDecorator, getFieldError, isFieldTouched,\r\n        } = this.props.form;\r\n        const appNameError = isFieldTouched('name_app') && getFieldError('name_app');\r\n        const appIdError = isFieldTouched('id_app') && getFieldError('id_app');\r\n\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              inputType: col.dataIndex === 'App' ? 'text' : 'text',\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              editing: this.isEditing(record),\r\n            }),\r\n          };\r\n        });\r\n\r\n        const rowSelection = {\r\n          onChange: (selectedRowKeys, selectedRows) => {\r\n            this.setState({\r\n              selectedRowKeys : selectedRowKeys\r\n            }, () => {\r\n              console.log(this.state.selectedRowKeys);\r\n            })\r\n          } \r\n        };\r\n\r\n        const hasSelected = this.state.selectedRowKeys.length > 0;\r\n        return (\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['3']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>타 인강 목록</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n              <Content style={{ margin: '5vh 30px 30px 30px' }}>\r\n                \r\n                <div style={{ padding: 11, background: '#fff', minHeight: 360, clear:'both', marginBottom: '1%'}}>\r\n                <div style={{float:\"left\"}}>\r\n                  <Button style={{top : \"0.5vh\"}} type=\"danger\" onClick ={this.delete} value={this.state.users.key} disabled={!hasSelected}>삭제</Button>\r\n                </div>\r\n                <div style={{marginRight : \"20vh\",textAlign : \"center\", marginBottom:\"1.5vh\", fontWeight : \"600\", fontSize : \"2vh\", marginTop : \"1vh\"}}>\r\n                  타 인강 목록\r\n                </div>\r\n                <Table\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.users}\r\n                    columns={columns}\r\n                    rowSelection={rowSelection}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n                \r\n\r\n                <Form layout=\"inline\" style={{marginLeft: \"4.5%\", display: \"flex\"}}>\r\n                  <Form.Item\r\n                  {...formItemLayout}\r\n                    validateStatus={appNameError ? 'error' : ''}\r\n                    help={appNameError || ''}\r\n                    style={{width : \"42%\", marginRight:\"0\"}}\r\n                    \r\n                  ><div>\r\n                    {getFieldDecorator('name_app', {\r\n                      rules: [{ required: true, message: '앱 이름을 입력하세요.' }],\r\n                    })(\r\n                      <Input placeholder=\"입력\" />\r\n                    )}\r\n                    </div>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                  {...formItemLayout}\r\n                    validateStatus={appIdError ? 'error' : ''}\r\n                    help={appIdError || ''}\r\n                    style={{width : \"42%\"}}\r\n                  ><div>\r\n                    {getFieldDecorator('id_app', {\r\n                      rules: [{ required: true, message: '앱 번호를 입력하세요.' }],\r\n                    })(\r\n                      <Input placeholder=\"입력\" />\r\n                    )}</div>\r\n                  </Form.Item>\r\n                  <Form.Item style={{float: \"right\"}}\r\n                  {...formItemLayout}>\r\n                      <Popconfirm title = \"추가하시겠습니까?\" onConfirm={this.handleSubmit} onCancel={() => {console.log(\"취소\")}} okText=\"확인\" cancelText=\"취소\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                      >\r\n                        추가\r\n                      </Button>\r\n                      </Popconfirm>\r\n                  </Form.Item>\r\n                </Form>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n    \r\n        );\r\n      }\r\n    }\r\nexport default Form.create()(settingIngang);\r\n","import React, { Component } from 'react';\r\nimport { Layout, Menu, Breadcrumb, Icon, Table, Button, Input, Form, InputNumber, Popconfirm, message} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nimport Highlighter from 'react-highlight-words';\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n// -----------------------Layout\r\nconst { Header, Content, Sider } = Layout;\r\nconst {SubMenu} = Menu;\r\n// -----------------------Layout\r\n\r\n// ----- Editer Func\r\nconst FormItem = Form.Item;\r\nconst EditableContext = React.createContext();\r\n\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\n\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === 'number') {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `${title}을 입력하세요.`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n// ----- Editer Func\r\n\r\nclass update extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        users : [],\r\n        collapsed: false,\r\n        searchText: '',\r\n        selectedRowKeys : [],\r\n        sortingNumbersNon : [],\r\n        sortingNumbers : [],\r\n        editingKey : '',\r\n        \r\n      }\r\n      \r\n      this.onChange = this.onChange.bind(this);\r\n      this.delete = this.delete.bind(this);\r\n      this.confirmLogout = this.confirmLogout.bind(this);\r\n      this.cancelLogout = this.cancelLogout.bind(this);\r\n\r\n      this.columns = [\r\n          {\r\n            title: '버전',\r\n            dataIndex: 'version',\r\n            key: 'version',\r\n            width: '17%',\r\n            editable: true,\r\n            ...this.getColumnSearchProps('version'),\r\n            sorter: (a,b) => this.compStringReverse(a.version, b.version),\r\n            defaultSortOrder: 'descend',\r\n            \r\n          }, \r\n          \r\n          {\r\n            title: '타입',\r\n            dataIndex: 'type',\r\n            width: '19%',\r\n            editable: true,\r\n            key: 'type',\r\n            ...this.getColumnSearchProps('type'),\r\n            sorter: (a, b) => this.compStringReverse(a.type, b.type),\r\n          }, \r\n\r\n          {\r\n            title: 'URL',\r\n            dataIndex: 'url',\r\n            width: '50%',\r\n            editable: true,\r\n            key: 'url',\r\n            ...this.getColumnSearchProps('url'),\r\n            sorter: (a, b) => this.compStringReverse(a.url, b.url),\r\n          }, \r\n        // -----------------------------Operation\r\n        {\r\n          dataIndex: 'operation',\r\n          render: (text, record) => {\r\n            const editable = this.isEditing(record);\r\n            return (\r\n              <div>\r\n                {editable ? (\r\n                  <span>\r\n                    <EditableContext.Consumer>\r\n                      \r\n                      {form => (\r\n                        <Popconfirm\r\n                          title=\"저장하시겠습니까?\"\r\n                          onConfirm={() => this.save(form, record.key)}\r\n                          okText=\"확인\" cancelText=\"취소\"\r\n                        >\r\n                          <a\r\n                            href=\"localhost:3000\"\r\n                            style={{ marginRight: 8 , float : \"left\"}}\r\n                          >\r\n                            저장\r\n                          </a>\r\n                        </Popconfirm>\r\n                      )}\r\n                    </EditableContext.Consumer>\r\n                    \r\n                    <div stlye= {{float : \"left\"}}onClick={() => this.cancel(record.key)} >\r\n                      취소\r\n                    </div>\r\n                  </span>\r\n                ) \r\n                \r\n                : (\r\n                  <a href = \"localhost:3000\" onClick={() => this.edit(record.key)}>편집</a>\r\n                )}\r\n              </div>\r\n            );\r\n          },\r\n        },\r\n        // -----------------------------Operation\r\n      ];\r\n    }\r\n    isEditing = record => record.key === this.state.editingKey;\r\n\r\n    cancel = () => {\r\n      this.setState({ editingKey: '' });\r\n    };\r\n\r\n    save(form, key) {\r\n      form.validateFields((error, row) => {\r\n        if (error) {\r\n          return;\r\n        }\r\n        const {users} = this.state;\r\n        const newData = [...users];\r\n        const index = newData.findIndex(item => key === item.key);\r\n        if (index > -1) {\r\n          const item = newData[index];\r\n          newData.splice(index, 1, {\r\n            ...item,\r\n            ...row,\r\n          });\r\n          this.setState({ users: newData, editingKey: '' });\r\n\r\n          console.log('Key : ', key)\r\n\r\n          const updateobj = {\r\n            version : newData[index].version,\r\n            type : newData[index].type,\r\n            url : newData[index].url,\r\n          }\r\n\r\n          console.log(updateobj);\r\n          axios.put(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/appverinfos/update/${key}`, updateobj)\r\n          .then(res => console.log(res));\r\n        }\r\n        else {\r\n          newData.push(row);\r\n          this.setState({ users: newData, editingKey: '' });\r\n        }\r\n      });\r\n    }\r\n\r\n    \r\n    edit(key) {\r\n      const {editingKey} = this.state\r\n      this.setState({ editingKey: key }, () => {console.log(editingKey)});\r\n    }\r\n    // ---------------------------------Edit Result or Change State\r\n    componentDidMount(){\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/appverinfos')\r\n      .then(res => {\r\n        for ( let i = 0 ; i < res.data.length ; i++){\r\n          res.data[i].key = res.data[i]['idx'];\r\n          delete res.data[i].idx;\r\n      \r\n        }\r\n        this.setState({\r\n          users : res.data,\r\n      })\r\n    });\r\n  }\r\n\r\n    onCollapse = (collapsed) => {\r\n      console.log(collapsed);\r\n      this.setState({ collapsed });\r\n    }\r\n\r\n  // sorting \r\n    onChange = (value, dateString) => {\r\n      // console.log('Selected Time: ', value);\r\n      // console.log('Formatted Selected Time: ', dateString);\r\n    }\r\n    \r\n\r\n    // -------------------table\r\n      getColumnSearchProps = (dataIndex) => ({\r\n        filterDropdown: ({\r\n          setSelectedKeys, selectedKeys, confirm, clearFilters,\r\n        }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => { this.searchInput = node; }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button\r\n              onClick={() => this.handleReset(clearFilters)}\r\n              size=\"small\"\r\n              style={{ width: 90 }}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n\r\n        \r\n        filterIcon: filtered => <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n        onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: (visible) => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n        render: (text) => (\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n            searchWords={[this.state.searchText]}\r\n            autoEscape\r\n            textToHighlight={text.toString()}\r\n          />\r\n        ),\r\n      })\r\n    \r\n      \r\n      // Search Fc\r\n      handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n      handleReset = (clearFilters) => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n      // Search Fc\r\n\r\n      // -------------------table\r\n\r\n    \r\n\r\n       // ============================= 로그아웃 \r\n\r\n    confirmLogout = (e) =>{\r\n      axios.get('http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/logout')\r\n            .then(res => console.log(res.data));\r\n\r\n      Cookies.remove('admin');\r\n      message.success('로그아웃 성공했습니다.');\r\n\r\n      setTimeout(() => {\r\n        return this.props.history.push('/')\r\n      }, 1000)\r\n\r\n    };\r\n    \r\n    cancelLogout = (e) => {\r\n      message.error('로그아웃 취소');\r\n    }\r\n    // ============================= 로그아웃\r\n\r\n      onChangePicker = (pagination, filters, sorter) => {\r\n        console.log('params', pagination, filters, sorter);\r\n      }\r\n      \r\n      compStringReverse = (a,b) => {\r\n        if(a > b) return -1;\r\n        if(b > a) return 1;\r\n        return 0;\r\n      }\r\n\r\n    \r\n      delete = (e) => {\r\n        e.preventDefault();\r\n        const {selectedRowKeys, users} = this.state\r\n\r\n        function selectedRowDelete(users){\r\n          for(let i = 0; i < selectedRowKeys.length ; i++)\r\n          {\r\n            if(users.key === selectedRowKeys[i])\r\n            {\r\n              return false;\r\n            }\r\n          }\r\n          return true;\r\n        }\r\n        var rowArrayDelete = users.filter(selectedRowDelete)\r\n\r\n        this.setState({\r\n          users : rowArrayDelete,\r\n        })\r\n\r\n        var key = []\r\n        key = selectedRowKeys;\r\n\r\n        for(let j = 0 ; j < selectedRowKeys.length ; j++)\r\n        {\r\n          axios.delete(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/appverinfos/delete/${key[j]}`)\r\n          .then(res => {\r\n            console.log(res);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n        }\r\n        \r\n      }\r\n      \r\n       handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const {users} = this.state;\r\n        var newData = [...users];\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            console.log('Received values of form: ', values);\r\n            if(values.hasOwnProperty('version') || values.hasOwnProperty('version') || values.hasOwnProperty('url')){\r\n              console.log(\"success\");\r\n              const insertObj = {\r\n                version : values.version,\r\n                type : values.type,\r\n                url : values.url,\r\n              }\r\n              \r\n              console.log(insertObj);\r\n\r\n              axios.post(`http://ec2-54-180-81-120.ap-northeast-2.compute.amazonaws.com:8080/api/sp/appverinfos/insert`, insertObj)\r\n              .then(res => {\r\n                res.data.key = res.data.idx;\r\n                delete res.data.idx;\r\n                console.log(res.data);\r\n                newData = newData.concat(res.data);\r\n                this.setState({\r\n                  users : newData,\r\n                })\r\n                window.location.reload();\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            message.error('모두 입력해주세요.');\r\n            console.log(\"실패\");\r\n          }\r\n        });\r\n      }\r\n\r\n\r\n      activateSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"success\");\r\n      };\r\n\r\n\r\n      render() {\r\n        const {\r\n          getFieldDecorator, getFieldError, isFieldTouched,\r\n        } = this.props.form;\r\n        const appNameError = isFieldTouched('Name') && getFieldError('Name');\r\n        const appIdError = isFieldTouched('Id') && getFieldError('Id');\r\n\r\n        const components = {\r\n          body: {\r\n            row: EditableFormRow,\r\n            cell: EditableCell,\r\n          },\r\n        };\r\n        const columns = this.columns.map((col) => {\r\n          if (!col.editable) {\r\n            return col;\r\n          }\r\n          return {\r\n            ...col,\r\n            onCell: record => ({\r\n              record,\r\n              inputType: col.dataIndex === 'App' ? 'text' : 'text',\r\n              dataIndex: col.dataIndex,\r\n              title: col.title,\r\n              editing: this.isEditing(record),\r\n            }),\r\n          };\r\n        });\r\n        // const rowSelections = {\r\n        //   onChange: (selectedRowKeys, selectedRows) => {\r\n        //     this.setState({\r\n        //       selectedRowKeys : selectedRowKeys\r\n        //     }, () => {\r\n        //       console.log(this.state.selectedRowKeys);\r\n        //     })\r\n        //   } \r\n        // };\r\n        const hasSelected = this.state.selectedRowKeys.length > 0;  \r\n        console.log(this.state.users);\r\n        return (\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n            <Sider\r\n              collapsible \r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <div className=\"App-logo\" />\r\n              <Menu theme=\"dark\" defaultSelectedKeys={['4']} mode=\"inline\" style={{maxHeight:\"898px\"}}>\r\n\r\n                <Menu.Item key = \"1\" style= {{marginTop: '32%'}}>\r\n                    <Icon type=\"pie-chart\" /> <span>대시보드</span>\r\n                    <Link to = {`/main`}/>  \r\n                </Menu.Item>  \r\n\r\n                <SubMenu\r\n                  key=\"sub1\"\r\n                  title={<span><Icon type=\"team\" /><span>설정</span></span>}\r\n                >\r\n                  <Menu.Item key=\"2\"><Link to = {`/prohibition`}/>사용금지 목록</Menu.Item>\r\n                  <Menu.Item key=\"3\"><Link to = {`/settingIngang`}/>타 인강 목록</Menu.Item>\r\n                  <Menu.Item key=\"4\"><Link to = {`/update`}/>앱 업데이트</Menu.Item>\r\n                </SubMenu>\r\n\r\n                <SubMenu\r\n                  key=\"sub2\"\r\n                  title={<span><Icon type=\"user\" /><span>조회</span></span>}\r\n                >\r\n                  <Menu.Item key=\"5\"><Link to = {`/app`}/>앱별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"6\"><Link to = {`/ingang`}/>인강별 사용이력</Menu.Item>\r\n                  <Menu.Item key=\"7\"><Link to = {`/student`}/>학생별 사용이력</Menu.Item>\r\n                </SubMenu>\r\n\r\n                  <Menu.Item key = \"8\" onClick={this.logout} style={{position:\"fixed\", bottom:\"5vh\", width: \"auto\"}}>\r\n                    \r\n                    \r\n                    <Popconfirm title = \"로그아웃 하시겠습니까?\" onConfirm={this.confirmLogout} onCancel={this.cancelLogout} okText=\"확인\" cancelText=\"취소\">\r\n                        <Icon type=\"logout\"/>\r\n                        <span>로그아웃&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span> \r\n                        <Link to = {`/`}/>                  \r\n                    </Popconfirm>\r\n\r\n                  </Menu.Item>\r\n              </Menu>\r\n            </Sider>\r\n\r\n\r\n            <Layout>\r\n              <Header style={{ background: '#1DA57A', padding: 0 }} >\r\n                <Breadcrumb style={{ margin: '12px 0'}}>\r\n                  <Breadcrumb.Item><h1 style={{color : 'white' , marginLeft : \"4vh\", fontWeight :\"bolder\", fontSize : \"3.2vh\"}}>앱 업데이트</h1></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n              </Header>\r\n\r\n              <Content style={{ margin: '5vh 30px 30px 30px' }}>\r\n                \r\n                <div style={{ padding: 11, background: '#fff', minHeight: 360, clear:'both', marginBottom: '1%'}}>\r\n                <div style={{float:\"left\"}}>\r\n                  <Button style={{}} type=\"danger\" onClick ={this.delete} value={this.state.users.key} disabled={!hasSelected}>삭제</Button>\r\n                </div>\r\n                <div style={{float:\"left\", marginLeft: \"1vh\"}}>\r\n                <Popconfirm title = \"활성화하시겠습니까?\" onConfirm={this.activateSubmit} onCancel={() => {console.log(\"취소\")}} okText=\"확인\" cancelText=\"취소\">\r\n                  <Button style={{}} type=\"primary\" disabled={!hasSelected}>활성화</Button>\r\n                </Popconfirm>\r\n                </div>\r\n                <div style={{marginRight : \"20vh\",textAlign : \"center\", marginBottom:\"1.5vh\", fontWeight : \"600\", fontSize : \"2vh\", marginTop : \"1vh\"}}>\r\n                앱 업데이트\r\n                </div>\r\n                <Table\r\n                    rowSelection={{type :'radio', \r\n                    columnTitle : \"활성화\",\r\n                    columnWidth : \"7%\",\r\n                    onChange: (selectedRowKeys, selectedRows) => {\r\n                      this.setState({\r\n                        selectedRowKeys : selectedRowKeys\r\n                      }, () => {\r\n                        console.log(this.state.selectedRowKeys);\r\n                        \r\n                      })\r\n                    // return (\r\n                    //     <Popconfirm \r\n                    //         title = \"활성화하시겠습니까?\" onConfirm={this.activateSubmit} onCancel={() => {console.log(\"취소\")}} okText=\"확인\" cancelText=\"취소\">\r\n                    //     </Popconfirm>)\r\n                    }\r\n                     \r\n                }}\r\n\r\n                    components={components}\r\n                    bordered\r\n                    dataSource={this.state.users}\r\n                    columns={columns}\r\n                    rowClassName=\"editable-row\"\r\n                    pagination={{\r\n                      onChange: this.cancel,\r\n                    }}\r\n                    onChange = {this.onChange}\r\n                     rowkey={record => record.uid}\r\n                  />\r\n\r\n                <Form layout=\"inline\" style={{marginLeft: \"7%\", display : \"flex\", spaceBetween : \"10px\"}}>\r\n                  <Form.Item\r\n                  \r\n                    validateStatus={appNameError ? 'error' : ''}\r\n                    help={appNameError || ''}\r\n                    style={{flex: \"1\"}}\r\n                    \r\n                  ><div>\r\n                    {getFieldDecorator('version', {\r\n                      rules: [{ required: true, message: '앱 버전을 입력하세요.' }],\r\n                    })(\r\n                      <Input  placeholder=\"신규 버전 입력\" />\r\n                    )}\r\n                    </div>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                  \r\n                    validateStatus={appIdError ? 'error' : ''}\r\n                    help={appIdError || ''}\r\n                    style={{flex: \"1\"}}\r\n                  ><div>\r\n                    {getFieldDecorator('type', {\r\n                      rules: [{ required: true, message: '앱 타입를 입력하세요.' }],\r\n                    })(\r\n                      <Input  placeholder=\"타입 입력\" />\r\n                    )}</div>\r\n                  </Form.Item>\r\n                  <Form.Item\r\n                    validateStatus={appIdError ? 'error' : ''}\r\n                    help={appIdError || ''}\r\n                    style={{flex: \"3\", display: \"block\"}}\r\n                    \r\n                  ><div>\r\n                    {getFieldDecorator('url', {\r\n                      rules: [{ required: true, message: 'URL을 입력하세요.' }],\r\n                    })(\r\n                      <Input style={{width:\"75vh\"}} placeholder=\"URL 입력\" />\r\n                    )}</div>\r\n                  </Form.Item>\r\n                  <Form.Item style={{float: \"right\"}}\r\n                  >\r\n                      <Popconfirm title = \"추가하시겠습니까?\" onConfirm={this.handleSubmit} onCancel={() => {console.log(\"취소\")}} okText=\"확인\" cancelText=\"취소\">\r\n                      <Button\r\n                        type=\"primary\"\r\n                        htmlType=\"submit\"\r\n                      >\r\n                        추가\r\n                      </Button>\r\n                      </Popconfirm>\r\n                  </Form.Item>\r\n                </Form>\r\n                </div>\r\n              </Content>\r\n            </Layout>\r\n          </Layout>\r\n    \r\n        );\r\n      }\r\n  }\r\nexport default Form.create()(update);\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport student from './component/UIElements/student';\r\nimport app from './component/UIElements/app';\r\nimport login from './component/Login/login';\r\nimport ingang from './component/UIElements/ingang';\r\nimport main from './component/Main/main';\r\nimport Footer from './component/Static/footer';\r\nimport prohibition from './component/Setting/prohibition';\r\nimport settingIngang from './component/Setting/settingIngang';\r\nimport update from './component/Setting/update';\r\nimport {message} from 'antd';\r\n// import Cookies from 'js-cookie';\r\n// Don't forget to include the CSS styles for antd!\r\n// ----------------------------\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    \r\n    var cookie = document.cookie;\r\n    console.log(\"admin :\", cookie.includes(\"admin\"));\r\n    if(window.location.pathname !== '/'){\r\n      if(cookie.length > 0 && cookie.includes(\"admin\")){\r\n      } else {\r\n        message.error('세션이 만료되었습니다.');\r\n      setTimeout(() => {\r\n        window.location.href = \"/\";\r\n      }, 1000)\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n        \r\n          \r\n          <Route exact path =\"/\" component={login}/>\r\n          \r\n          <Route path = \"/main\" component ={main}/>\r\n\r\n          <Route path = \"/prohibition\" component = {prohibition}/>\r\n          <Route path = \"/settingIngang\" component = {settingIngang}/>\r\n          <Route path = \"/update\" component = {update}/>\r\n\r\n          <Route path = \"/student\" component={student} />\r\n          <Route path = \"/app\" component={app}/>\r\n          <Route path = \"/ingang\" component={ingang}/>\r\n\r\n          {window.location.pathname !== '/' ? <Footer/> : ''}\r\n          \r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}